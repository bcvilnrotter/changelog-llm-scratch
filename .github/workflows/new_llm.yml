name: New LLM

on:
  workflow_dispatch:  # Allow manual trigger

env:
  PYTHON_VERSION: '3.12'

jobs:
  train:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        ref: main  # Specify the branch to checkout
        fetch-depth: 0  # Full history for changelog

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: Prepare training titles
      run: |
        # Extract titles for training (prioritizing unused pages)
        python scripts/extract_training_titles.py --count 1000 --debug
        
        # Log how many titles we got
        TITLE_COUNT=$(python -c "import json; print(len(json.load(open('titles.json'))))")
        echo "Prepared $TITLE_COUNT titles for training"

    - name: Fetch Wikipedia pages
      run: |
        # Fetch the prepared titles
        python scripts/fetch_wikipedia.py --titles "$(cat titles.json)" --debug
        
        # List files in data/raw to verify download
        echo "Files in data/raw directory:"
        ls -la data/raw/
        echo "Total files downloaded: $(ls data/raw/ | wc -l)"
        
    - name: Train model
      run: |
        python scripts/train_llm.py \
          --d-model 256 \
          --num-heads 4 \
          --num-layers 4 \
          --max-length 512 \
          --batch-size 4 \
          --learning-rate 1e-4 \
          --min-pages 1

    - name: Clean up and push changes
      run: |
        # Ensure we're on the latest commit
        git checkout main
        git pull origin main
    
        # Stage changelog and model files
        git add data/changelog.db
        git add models/
    
        # Create commit with training details
        git commit -m "Daily training: $(date +'%Y-%m-%d')
    
        - Trained on new pages
        - Updated changelog
        - Saved new model checkpoint"
    
        # Push the changes
        git push origin main

    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      with:
        name: model-checkpoint
        path: models/final/
        retention-days: 7  # Keep only the last week's checkpoints
